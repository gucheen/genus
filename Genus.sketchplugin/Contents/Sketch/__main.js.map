{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/config.js","webpack://exports/./src/fileSystem.js","webpack://exports/./src/htmlCSSGenerator.js","webpack://exports/./src/main.js","webpack://exports/./src/utils.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\""],"names":["CONFIG","sketch","exportFormat","use_id_for_asset_name","embedSvg","cssFileName","htmlFileName","imageFolder","utils_obj","utils","fileSystem","context","filename","text","string","NSString","stringWithFormat","writeToFile_atomically_encoding_error","NSUTF8StringEncoding","nil","document","fileURL","path","replace","fileManager","NSFileManager","defaultManager","removeItemAtPath_error","name","createDirectoryAtPath_withIntermediateDirectories_attributes_error_","srcName","dstName","exists","fileExistsAtPath","moveItemAtPath_toPath_error","errorMessage","alertError","default_asset_export_format","use_id_for_name","embedSvgConf","Exporter","doc","require","getSelectedDocument","selection","selectedLayers","selectedArtboards","getSelectedArtboards","imageFormat","imageScales","exportFolder","file_obj","setOptions","options","getSelection","forEachLayer","group","func","layers","i","length","layerMarkedForExport","layer","formats","exportFormats","artboardSet","NSMutableSet","alloc","init","artboards","artboard","undefined","type","getParentArtboard","containsObject","addObject","push","exportedLayers","generateHTML","childrenHtml","generateHTMLForChildren","html","generateHTMLHeader","generateHTMLFooter","generateCSS","css","generateBoilerPlateCSS","generateCSSForArtboard","forEach","generateCSSForLayer","Math","round","frame","width","cleanString","checkIfLayerExportedAsImage","condition1","condition2","isMaskLayerInGroup","condition3","tabs","sketchObject","isVisible","layerName","generateLayerName","openTag","closeTag","embedCode","preprocessingTextLayer","generateHTMLTextForMultiText","console","log","attrStr","attributedStringValue","string_text","limitRange","NSMakeRange","effectiveRange","MOPointer","fonts","font_colors","stringStartIndices","stringLengths","effectiveRange2","attribute_atIndex_longestEffectiveRange_inRange","NSFontAttributeName","location","attributes","attributesAtIndex_longestEffectiveRange_inRange","MSAttributedStringColorAttribute","hexValue","value","NSMaxRange","weights","text_span_array","text_span","Object","font","font_color","weightIndex","NSFontManager","sharedFontManager","weightOfFont_","weight","fontFamilyName","familyName","fontSize","pointSize","sub_string","substr","spanArray","tspan","spanLength","exportImages","_that","exportPath","exportImageForLayer","scales","trimmed","export","index","scale","appendName","nameForScale","id","renameFile","str","spanElement","spanText","getBorderCss","style","borderCss","border_applied_counter","borders","k","enabled","getBorderString","border","borderCssString","thickness","color","fillType","getShadowCss","shadowCss","shadow_applied_counter","shadows","getShadowString","shadow","shadowCssString","x","y","blur","nsImageSize","image_full_path","output","buffer","nsImageForBuffer","toNSData","nsImage","NSImage","initWithData","size","height","generateCSSForTextLayer","fontFamily","fontVariant","fontStretch","appKitWeightToCSSWeight","fontWeight","fontStyle","textTransform","kerning","verticalAlignment","fills","textColor","lineHeight","opacity","alignment","spanCss","hasBackgroundColor","background","run","folder","deleteFile","createFolder","htmlPath","saveTextToFile","cssPath","getOptions","exporter","exportFullHTML","UI","message","errorMsg","errorMsgTitle","currentDirectoryPath","getCurrentFilePath","alertMessage","alert","e","msg","cmd","task","NSTask","setLaunchPath","setArguments","launch","title","runCommand","app","NSApplication","sharedApplication","displayDialog_withTitle","r","red","g","green","b","blue","toString","toUpperCase","layerExportName","maskPresent","maskLayers","isMasked"],"mappings":"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","file":"__main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","const CONFIG = {\n    sketch: {\n        exportFormat: \"png\", // export format for teh images (svg or png)\n        use_id_for_asset_name: true, // Will use sketch layer id for asset name\n        embedSvg: false,\n        // TODO use this config name \n        cssFileName: \"styles.css\",\n        htmlFileName: \"index.html\",\n        imageFolder: \"images/\"\n    }\n}\n\nexport default CONFIG;","import sketch from \"sketch\";\nimport utils from './utils';\nvar utils_obj = new utils();\n\n/**\n *File systems class implementing file/dir operations like save, renaming, creating directories etc.\n *\n * @class fileSystem\n */\nclass fileSystem \n{\n\n    constructor(context) \n    {\n        this.context = context;\n    }\n\n    /**\n     * Method to save text to a file.\n     *\n     * @param {*} filename\n     * @param {*} text\n     * @memberof fileSystem\n     */\n    saveTextToFile(filename, text) \n    {\n        /* NSString.stringWithFormat and writeToFile_atomically_encoding_error \n        * is not part of official sketch javascript api \n        */\n        const string = NSString.stringWithFormat(\"%@\", text);\n        string.writeToFile_atomically_encoding_error(filename, true, NSUTF8StringEncoding, nil);\n    }\n\n    /**\n     * Returns file path for the sketch context.\n     *\n     * @returns path for sketch file\n     * @memberof fileSystem\n     */\n    getCurrentFilePath() \n    {\n        return this.context.document.fileURL().path().replace(/\\.sketch$/, '')\n    }\n\n    /**\n     * Deletes the file given the path.\n     *\n     * @param {*} path\n     * @memberof fileSystem\n     */\n    deleteFile(path) \n    {\n        /* NSFileManager.defaultManager and fileManager.removeItemAtPath_error\n        * is not part of official sketch javascript api \n        */\n        var fileManager = NSFileManager.defaultManager();\n        fileManager.removeItemAtPath_error(path, nil);\n    }\n\n    /**\n     * Creates a folder given its name as argument.\n     *\n     * @param {*} name\n     * @memberof fileSystem\n     */\n    createFolder(name) \n    {\n        /* NSFileManager.defaultManager and fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error_\n        * is not part of official sketch javascript api \n        */\n        var fileManager = NSFileManager.defaultManager();\n        fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error_(name, true, nil, nil);\n    }\n\n    /**\n     * Rename the file given the source and destination.\n     *\n     * @param {*} srcName\n     * @param {*} dstName\n     * @memberof fileSystem\n     */\n    renameFile(srcName, dstName) \n    {\n        /* NSFileManager.defaultManager and fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error_\n        * is not part of official sketch javascript api \n        */\n        var fileManager = NSFileManager.defaultManager();\n        const exists = NSFileManager.defaultManager().fileExistsAtPath(srcName);\n        if(exists)\n        {\n            fileManager.moveItemAtPath_toPath_error( srcName, dstName, nil);\n        }\n        else\n        {\n            errorMessage = \"FileNotFoundError: Error in renaming file: \" + srcName\n            utils_obj.alertError(errorMessage)\n        }\n    }\n\n}\n\nexport default fileSystem;","import sketch from \"sketch\";\nimport fileSystem from './fileSystem';\nimport utils from './utils';\nimport CONFIG from './config';\n\n// documentation: https://developer.sketchapp.com/reference/api/\n\n// Configuration parameters\nvar default_asset_export_format = CONFIG.sketch.exportFormat;\nvar use_id_for_name = CONFIG.sketch.use_id_for_asset_name;\nvar embedSvgConf = CONFIG.sketch.embedSvg;\n\nvar utils_obj = new utils();\n/**\n * Exporter for sketch to HTML.\n *\n * @param {*} context\n */\nfunction Exporter(context) \n{\n\n    var context = context;\n\tvar doc = require('sketch/dom').getSelectedDocument()\n    var selection = doc ? doc.selectedLayers : nil;\n    var selectedArtboards = getSelectedArtboards();\n    var imageFormat = default_asset_export_format;\n    var imageScales = [1];\n    var embedSvg = false;\n    var exportFolder = null;\n    this.file_obj = new fileSystem(context);\n\n    /**\n     * setter method for setting exporter configurations\n     * @TODO : These options should come from the UI (in future release)\n     * @param {*} options\n     */\n    this.setOptions = function(options) \n    {\n        imageFormat = options.imageFormat;\n        embedSvg = options.embedSvg;\n        imageScales = options.imageScales;\n    }\n\n\n    this.getSelection = function() \n    {\n        return selection;\n    }\n\n    /**\n     * getter method for selected artboards.\n     *\n     * @returns {Array<Object>}\n     */\n    this.getSelectedArtboards = function()\n    {\n        return selectedArtboards;\n    }\n\n    function forEachLayer(group, func) \n    {\n        var layers = group.layers;\n        for (var i = 0; i < layers.length; i++) {\n            func(layers[i]);\n        }\n    };\n\n\n    /**\n     * Checks if layer marked for export\n     *\n     * @returns true if No of exportable formats greater that 1 else false\n     */\n    function layerMarkedForExport(layer) \n    {\n        //var exportOptions = layer.exportFormats;\n        var formats = layer.exportFormats;\n        return formats.length > 0;\n    }\n\n\n    /**\n     * Get the array of selected artboards in sketch file\n     *\n     * @returns {Array} list of artboards selected\n     */\n    function getSelectedArtboards() \n    {\n\n        // Using Set so that selected artboards are not repeated and unique\n        var artboardSet = NSMutableSet.alloc().init();\n\n        var artboards = [];\n        for (var i = 0; i < selection.length ; i++) \n        {\n\t\t\tvar layer = selection.layers[i];\n\t\t\tvar artboard = undefined ;\n\t\t\t// return artboard if selection is an artboard itself\n            if (layer.type == \"Artboard\") \n            {\n\t\t\t\tartboard = layer ;\n\t\t\t}\n\t\t\t// else return parent artboard of layer \n            else \n            {\n\t\t\t\tartboard = layer.getParentArtboard();\n\t\t\t}\n\t\t\t// Make sure artboard is not undefined and is unique using sets\n            if (artboard != undefined && !artboardSet.containsObject(artboard)) \n            {\n                artboardSet.addObject(artboard);\n                artboards.push(artboard);\n            }\n        }\n        return artboards;\n    }\n\n    var exportedLayers = {};\n\n    /**\n     * Method to generate html given the artboard.\n     *\n     * @param {*} artboard\n     * @returns {String} html corresponding to artboard\n     */\n    function generateHTML(artboard) \n    {\n        // Create new array to save layers for export for each artboard\n        exportedLayers[artboard] = [];\n\n        // Get HTML & CSS for children\n        var childrenHtml = generateHTMLForChildren(artboard, \"\\t\\t\\t\");\n\n        // Generate HTML\n        var html = generateHTMLHeader(artboard);\n        html += childrenHtml;\n        html += generateHTMLFooter();\n\n        return html;\n    }\n\n    /**\n     * Method to generate CSS for the artboard.\n     *\n     * @param {*} artboard\n     * @returns {String} css for the artboard\n     */\n    function generateCSS(artboard) \n    {\n        // Generate CSS\n        var css = \"/* Generated by Genus plugin */\\n\";\n        css += \"\\n\"\n\n        css += \"/* Boiler plate CSS \\n\"\n        css += \"sk-ab is css style applied to full art board\\n\"\n        css += \"sk-asset is common css property applied to every css style generated by genus plugin \\n\"\n        css += \"*/ \\n\"\n        css += \"\\n\";\n        css += generateBoilerPlateCSS();\n        css += \"\\n\";\n\n        css += \"/* Specific to \" + artboard.name + \" */\\n\";\n        css += generateCSSForArtboard(artboard);\n        css += \"\\n\";\n\n        exportedLayers[artboard].forEach(function(layer) {\n            css += generateCSSForLayer(layer);\n        });\n\n        return css;\n    }\n\n    /**\n     * Generates the <head> html content for the artboard\n     *\n     * @param {*} artboard\n     * @returns {String} content for <head> tag\n     */\n    function generateHTMLHeader(artboard) \n    {\n\n        var html = \"<html>\\n\";\n        html += \"\\t<head>\\n\";\n        html += \"\\t\\t<link href='styles.css' rel='stylesheet'>\\n\";\n        html += \"\\t\\t<meta charset=\\\"utf-8\\\"/>\\n\"\n        html += \"\\t</head>\\n\";\n        html += \"\\t<body style=\\\"margin:0px;\\\">\\n\";\n        html += \"\\t <div style=\\\"width: \" + Math.round(artboard.frame.width) + \"px; height: 100%; position:relative; margin:auto;\\\"> \\n\";\n        html += \"\\t\\t<div class='sk-ab sk-\" + utils_obj.cleanString(artboard.name) + \"'>\\n\";\n\n        return html;\n    }\n\n    /**\n     * Generates the closing tags for head, html and the div's inside the body\n     *\n     * @param {*} artboard\n     * @returns {String} html string for closing the html head, body and div tag\n     */\n    function generateHTMLFooter() \n    {\n        var html = \"\\t\\t</div>\\n\";\n        html += \"\\t</div>\\n\";\n        html += \"\\t</body>\\n\";\n        html += \"</html>\";\n\n        return html;\n    }\n\n    /**\n     * Generates the closing tags for head, html and the div's inside the body\n     *\n     * @returns {String} html string for closing the html head, body and div tag\n     */\n    function checkIfLayerExportedAsImage(layer)\n    {\n        // If layer is marked as exportable in sketch export it should be\n        // exported as an image\n        var condition1 = layerMarkedForExport(layer) \n\n        // If Layer is of type Group and that group has any element that has\n        // mask then export whole group as an image\n        var condition2 = (layer.type == \"Group\" && utils_obj.isMaskLayerInGroup(layer))\n\n        // Export any layer as an image which is not of type text or group\n        // e.g. Shape, Image, Symbols etc.\n        var condition3 = (layer.type != \"Text\" && layer.type != \"Group\")\n\n        // Export layer as an image if any of these three conditions are met \n        return  condition1 ||  condition2 || condition3\n    }\n\t /**\n     * Main recursive function for generate html for any layer\n     *\n     * @returns {String} html \n     */\n    function generateHTMLForChildren(group, tabs) \n    {\n        var html = \"\";\n\n        forEachLayer(group, function(layer) \n        {\n            if (!layer.sketchObject.isVisible()) \n            {\n                return;\n            }\n\n            layer.layerName = utils_obj.generateLayerName(layer) ;\n\t\t\t\n            var openTag = tabs + \"<div class='sk-asset sk-\" + layer.layerName + \"'>\";\n\t\t\tvar closeTag = \"</div>\\n\";\n\n            // This if condition should execute only if we want a layer to be exported as image\n            if (checkIfLayerExportedAsImage(layer)) \n            {\n                exportedLayers[layer.getParentArtboard()].push(layer);\n                var embedCode = \"\";\n                html += openTag + embedCode + closeTag;\n            }\n            // If layer is group...\n            else if (layer.type == \"Group\") \n            {\n                var childrenHtml = generateHTMLForChildren(layer, tabs + \"\\t\");\n\n                // If group is not empty, write it and its children to HTML\n                if (childrenHtml != \"\") \n                {\n                    html += openTag + \"\\n\";\n                    html += childrenHtml;\n                    html += tabs + closeTag;\n\n                    // This layer needs to be exported to HTML\n                    exportedLayers[layer.getParentArtboard()].push(layer);\n                }\n            }\n            // If layer is text export text\n            else if (layer.type == \"Text\") \n            {\n                layer = preprocessingTextLayer(layer);\n\t\t\t\thtml += openTag + generateHTMLTextForMultiText(layer) + closeTag;\n                exportedLayers[layer.getParentArtboard()].push(layer);\n            } \n            else \n            {\n                console.log(\"Unhandled layer type encountered, Skipping export of layer ...\")\n            }\n\n        });\n\n        return html;\n    }\n\n\n\t/**\n     * Reprocesses and extracts data for Multiple style text using MacOS Attributed strings \n     * for text layers \n     *\n     * @param {*} Text layer for which the html needs to be generated\n     * @param {*} tabs used for indentation of generated html text\n     * @returns layer with preprocessing done\n     */\n\tfunction preprocessingTextLayer(layer, tabs)\n\t{\n        // Following code extracts multiple text styles from text using MacOS api, Sketch api does not support\n        // Multiple text styles in a layer \n        // TODO : Mark all functions that are not part of sketch javascript api\n\t\tconst attrStr = layer.sketchObject.attributedStringValue()\n\t\tconst string_text = attrStr.string()\n\t\tlet limitRange = NSMakeRange(0, attrStr.length())\n\t\tlet effectiveRange = MOPointer.alloc().init()\n\n\t\tconst fonts = []\n\t\tconst font_colors = []\n\t\tconst stringStartIndices = []\n\t\tconst stringLengths = []\n\n\t\tlet effectiveRange2 = MOPointer.alloc().init()\n\n        while (limitRange.length > 0) \n        {\n            // attribute_atIndex_longestEffectiveRange_inRange is not part of official sketch javascript api \n\t\t\tfonts.push(attrStr.attribute_atIndex_longestEffectiveRange_inRange(\n\t\t\t\tNSFontAttributeName,\n\t\t\t\tlimitRange.location,\n\t\t\t\teffectiveRange,\n\t\t\t\tlimitRange\n\t\t\t))\n\n\t\t\tvar attributes = attrStr.attributesAtIndex_longestEffectiveRange_inRange(\n\t\t\t\tlimitRange.location,\n\t\t\t\teffectiveRange2,\n\t\t\t\tlimitRange\n\t\t\t)\n            if (attributes != null) \n            {\n\t\t\t\tfont_colors.push(attributes.MSAttributedStringColorAttribute.hexValue())\n\t\t\t}\n\n\t\t\tstringStartIndices.push(effectiveRange.value().location)\n\t\t\tstringLengths.push(effectiveRange.value().length)\n\n\t\t\tlimitRange = NSMakeRange(\n\t\t\t\tNSMaxRange(effectiveRange.value()),\n\t\t\t\tNSMaxRange(limitRange) - NSMaxRange(effectiveRange.value())\n\t\t\t)\n\t\t}\n\n\n\t\tlet weights = [100, 100, 100, 200, 300, 400, 500, 500, 600, 700, 800, 900, 900, 900, 900, 900];\n\n\t\tconst text_span_array = []\n        for (var i = 0; i < fonts.length; i++) \n        {\n\t\t\tvar text_span = new Object();\n\n\t\t\tvar font = fonts[i];\n\t\t\tvar font_color = font_colors[i];\n\n\t\t\tlet weightIndex = NSFontManager.sharedFontManager().weightOfFont_(layer.sketchObject.font());\n\t\t\tlet weight = weights[weightIndex];\n\t\t\tvar fontFamilyName = font.familyName();\n\t\t\tvar fontSize = font.pointSize();\n\t\t\tvar sub_string = string_text.substr(stringStartIndices[i], stringLengths[i]);\n\t\t\tsub_string = sub_string.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n\n\t\t\ttext_span.text = sub_string\n\t\t\ttext_span.fontFamilyName = fontFamilyName\n\t\t\ttext_span.weight = weight\n\t\t\ttext_span.fontSize = fontSize\n\t\t\ttext_span.font_color = font_color\n\t\t\ttext_span_array.push(text_span)\n\t\t}\n\n\t\tlayer[\"tspan\"] = text_span_array;\n\t\tvar spanArray = layer.tspan;\n\t\tvar spanLength = text_span_array.length;\n\t\t//console.log(\"spanLength: \"+ spanLength);\n\n\t\tlayer[\"tspanObject\"] = text_span_array;\n\t\t\n\t\treturn layer ; \n\t}\n    /**\n     * Exports images for all the layers to a specified destination, calls exportImages internally\n     * \n     * @TODO - This is typical file system operation & should be moved in filesystem.js with refactoring\n     *\n     * @param {*} _that exported instance\n     * @param {*} layers list of layers to be exported\n     * @param {*} exportPath the path where the images need to be exported\n     */\n    function exportImages(_that, layers, exportPath) \n    {\n        layers.forEach(function(layer) {\n            exportImageForLayer(_that, layer, exportPath + \"images/\", imageFormat, imageScales);\n        });\n    }\n\n    /**\n     * Export images to a specified destination for a particular layer\n     *\n     * @param {*} _that exported instance\n     * @param {*} layer layer to be exported\n     * @param {*} exportPath export path\n     * @param {*} imageFormat image format of exported images\n     * @param {*} imageScales scale of images to be exported (e.g 2x, 3x)\n     */\n    function exportImageForLayer(_that, layer, exportPath, imageFormat, imageScales) \n    {\n        const options = {\n            scales: '1, 2, 3',\n            formats: imageFormat\n        }\n        options['output'] = exportPath\n\n        options[\"use-id-for-name\"] = use_id_for_name\n        options.trimmed = false\n        sketch.export(layer, options)\n\n        for (var index in imageScales) {\n            var scale = imageScales[index];\n            if (scale > 1) {\n                var appendName = utils_obj.nameForScale(scale);\n                var srcName = exportPath + layer.id + appendName + \".\" + imageFormat;\n                var dstName = exportPath + layer.layerName + appendName + \".\" + imageFormat;\n                _that.file_obj.renameFile(srcName, dstName);\n\n            } else {\n                var srcName = exportPath + layer.id + \".\" + imageFormat;\n                var dstName = exportPath + layer.layerName + \".\" + imageFormat;\n                _that.file_obj.renameFile(srcName, dstName);\n\n            }\n        }\n\n    }\n\n    /**\n     * Generates html when there is multiple texts for the Sketch layer type \"Text\"\n     *\n     * @param {*} Sketch layer of type \"Text\"\n     * @returns {String} Returns collection of spans as string to be used exported in html\n     */\n    function generateHTMLTextForMultiText(layer) \n    {\n        var str = \"\";\n        var spanArray = layer.tspan;\n        var spanLength = spanArray.length;\n\t\t\n        for (var i = 0; i < spanLength; i++) \n        {\n            var openTag = '<span class=\"span' + (i + 1) + '\">';\n            var closeTag = \"</span>\";\n\n            var spanElement = spanArray[i];\n            var spanText = spanElement.text;\n            if (spanText === undefined) \n            {\n                str += openTag + \"\" + closeTag;\n            } else \n            {\n                str += openTag + spanText + closeTag;\n            }\n\n        }\n        return str;\n    }\n\n\n\n    /**\n     * Generate border css style when border style is applied in the layer\n     *\n     * @param {*} style border style property from sketch\n     * @returns {String} css for border radius\n     */\n    function getBorderCss(style) \n    {\n        var borderCss = \"\";\n        var border_applied_counter = 0;\n        if (style.borders != undefined) \n        {\n            for (var k = 0; k < style.borders.length; k++) \n            {\n                if (style.borders[k].enabled) \n                {\n                    border_applied_counter += 1;\n                    if (border_applied_counter == 1) \n                    {\n                        borderCss += \"\\tborder: \";\n\n                    } else if (border_applied_counter > 1) \n                    {\n                        borderCss += \" , \";\n                    }\n                    borderCss += getBorderString(style.borders[k]);\n\n                }\n            }\n            if (border_applied_counter > 0)\n                borderCss += \" ;\\n\";\n        }\n\n        return borderCss;\n    }\n\n\t/**\n     * Generate border string given border value\n     *\n     * @param {*} style border style property from sketch\n     * @returns {String} css for border radius\n     */\n    function getBorderString(border) \n    {\n\n        var borderCssString = \"\"\n        //  border: border-width border-style border-color|initial|inherit;\n        if (border.thickness != undefined) \n        {\n            borderCssString += border.thickness + \"px \";\n        }\n\n        if (border.color != undefined && border.fillType == \"Color\") \n        {\n            borderCssString += border.color;\n        }\n\n\n        return borderCssString;\n\n    }\n\n\n    /**\n     * Generates css when shadow style is applied in the layer\n     *\n     * @param {*} style style object for the shadow\n     * @returns {String} css for the shadow style\n     */\n    function getShadowCss(style) \n    {\n        var shadowCss = \"\";\n        var shadow_applied_counter = 0;\n        if (style.shadows != undefined) \n        {\n            for (var k = 0; k < style.shadows.length; k++) \n            {\n                if (style.shadows[k].enabled) \n                {\n                    shadow_applied_counter += 1;\n                    if (shadow_applied_counter == 1) {\n                        shadowCss += \"\\ttext-shadow: \";\n\n                    } else if (shadow_applied_counter > 1) \n                    {\n                        shadowCss += \" , \";\n                    }\n                    shadowCss += getShadowString(style.shadows[k]);\n\n                }\n            }\n            if (shadow_applied_counter > 0)\n                shadowCss += \" ;\\n\";\n        }\n\n        return shadowCss;\n    }\n\n\t/**\n\t * Generates css string for shadow property \n\t *\n\t * @param {*} shadow object\n\t * @returns {String} css for the shadow style\n\t */\n    function getShadowString(shadow) \n    {\n\n        var shadowCssString = \"\"\n        // h-shadow v-shadow blur-radius color|none|initial|inherit;\n        if (shadow.x != undefined) \n        {\n            shadowCssString += shadow.x + \"px \";\n        }\n        if (shadow.y != undefined) \n        {\n            shadowCssString += shadow.y + \"px \";\n        }\n        if (shadow.blur != undefined) \n        {\n            shadowCssString += shadow.x + \"px \";\n        }\n        if (shadow.color != undefined) \n        {\n            shadowCssString += shadow.color;\n        }\n\n        return shadowCssString;\n\n    }\n\n\n    /**\n     * Generates CSS for the layer. \n     * This gives absolute position for left and top, width and height, font styles, opacity etc.\n     *\n     * @param {*} layer layer for which the css needs to be generated\n     * @returns {String} css for the layer\n     */\n    function generateCSSForLayer(layer) \n    {\n\n        var css = \".sk-asset.sk-\" + layer.layerName + \" {\\n\";\n        css += \"\\tleft: \" + Math.round(layer.frame.x) + \"px;\\n\";\n        css += \"\\ttop: \" + Math.round(layer.frame.y) + \"px;\\n\";\n\n        // Set background image for exported layer\n        var nsImageSize = undefined\n\n\n        if(checkIfLayerExportedAsImage(layer))\n        {\n        /* Sketch api often returns wrong width and height for an image. \n         * e.g. In case of layer has shadow or mask property, to prevent bugs due to this\n         * Width and height or any image is programmatically extracted from actual exported image using\n         * unofficial Mac api \n         */\n            var image_full_path = \"images/\" + layer.layerName + \".\" + imageFormat;\n            css += \"\\tbackground-image: url(\\\"\" + image_full_path + \"\\\");\\n\";\n            const options = {\n                formats: default_asset_export_format,\n                output: false\n            }\n            options.trimmed = false\n            const buffer = sketch.export(layer, options)\n            var nsImageForBuffer = buffer.toNSData()\n            let nsImage = NSImage.alloc().initWithData(nsImageForBuffer)\n            nsImageSize = nsImage.size()\n            css += \"\\twidth: \" + Math.round(nsImageSize.width) + \"px;\\n\";\n            css += \"\\theight: \" + Math.round(nsImageSize.height) + \"px;\\n\";\n\n        } \n        else \n        {\n        /* For layer type not image get width height from official sketch javascript api\n         */\n            css += \"\\twidth: \" + Math.round(layer.frame.width) + \"px;\\n\";\n            css += \"\\theight: \" + Math.round(layer.frame.height) + \"px;\\n\";\n        }\n\n        css += \"}\\n\";\n        css += \"\\n\";\n\n        /* If assets are exported at different scaled resolution, Following code will return different css properties \n        * for different resolution devices, e.g. For desktop good resolution screen image picked could be 2x instead of 1x resolution\n        */\n        if(checkIfLayerExportedAsImage(layer))\n        {\n \n            for (var index in imageScales) \n            {\n                var scale = imageScales[index];\n                if (scale > 1) \n                {\n                    var appendName = utils_obj.nameForScale(scale);\n\n                    css += \"@media only screen and (min--moz-device-pixel-ratio: \" + scale + \"),\\n\" +\n                        \"only screen and (-o-min-device-pixel-ratio: \" + scale + \"/1),\\n\" +\n                        \"only screen and (-webkit-min-device-pixel-ratio: \" + scale + \"),\\n\" +\n                        \"only screen and (min-device-pixel-ratio: \" + scale + \") {\\n\";\n\n                    css += \"\\t.sk-asset.sk-\" + layer.layerName + \" {\\n\";\n                    var image_full_path = \"images/\" + layer.layerName + appendName + \".\" + imageFormat;\n                    css += \"\\t\\tbackground-image: url(\\\"\" + image_full_path + \"\\\");\\n\";\n                    css += \"\\t\\tbackground-size: \" + Math.round(nsImageSize.width) + \"px \" + Math.round(nsImageSize.height) + \"px;\\n\";\n                    css += \"\\t}\\n\";\n                    css += \"}\\n\";\n                }\n            }\n\t\t} \n        else if (layer.type == \"Text\") \n        {\n\t\t\tcss += generateCSSForTextLayer(layer)\n\t\t}\n   \treturn css;\n\t\n\t}\n\n    /**\n     * Generates CSS for the layer of type text. \n     *\n     * @param {*} Text layer for which the css needs to be generated\n     * @returns {String} css for the layer\n     */\n\tfunction generateCSSForTextLayer(layer)\n\t{\n        // For text without multitext span length should be 1 \n        var spanLength = 0;\n        if (layer.tspan != undefined) \n        {\n\t\t\tvar spanArray = layer.tspan;\n            if (spanArray.length != undefined) \n            {\n\t\t\t\tspanLength = spanArray.length;\n\t\t\t}\n        }\n\n\t\tvar css = \"\"\n\t\tcss += \".sk-asset.sk-\" + layer.layerName + \" {\\n\";\n\t\tcss += \"\\tfont-family: \\\"\" + layer.style.fontFamily + \"\\\" ;\\n\";\n\t\tcss += \"\\tfont-variant: \" + layer.style.fontVariant + \" ;\\n\";\n        css += \"\\tfont-stretch: \\\"\" + layer.style.fontStretch + \"\\\" ;\\n\";\n        // Refer to this solution on sketch forum https://sketchplugins.com/d/193-how-to-get-font-weight/3 \n\t\tcss += \"\\tfont-weight: \" + utils_obj.appKitWeightToCSSWeight(layer.style.fontWeight) + \" ;\\n\";\n\t\tcss += \"\\tfont-style: \" + layer.style.fontStyle + \" ;\\n\";\n\n        if (layer.style.textTransform == \"uppercase\") \n        {\n\t\t\tcss += \"\\ttext-transform: uppercase\" + \";\\n\";\n\t\t}\n\n        if (layer.style.kerning > 0) \n        {\n\t\t\tcss += \"\\tletter-spacing: \" + layer.style.kerning + \";\\n\";\n        }\n\n       \n        if ((layer.style.verticalAlignment != undefined) && (spanLength == 1))\n        {\n            css += \"\\tdisplay: table;\\n\"\n        }\n\n\t\t// If fills only first fill is applied\n        if (layer.style.fills.length > 0) \n        {\n\t\t\tcss += \"\\tcolor: \" + layer.style.fills[0].color + \" ;\\n\";\n        } \n        else \n        {\n\t\t\tcss += \"\\tcolor: \" + layer.style.textColor + \" ;\\n\";\n\t\t}\n\t\tcss += \"\\tfont-size: \" + layer.style.fontSize + \".0px ;\\n\";\n\t\tcss += \"\\tline-height: \" + layer.style.lineHeight + \".0px ;\\n\";\n\t\tcss += \"\\topacity: \" + layer.style.opacity + \" ;\\n\";\n\t\tcss += \"\\ttext-align: \" + layer.style.alignment + \" ;\\n\";\n\t\tcss += \"\\tfont-kerning: \" + layer.style.kerning + \" ;\\n\";\n\t\tcss += getShadowCss(layer.style)\n\t\tcss += getBorderCss(layer.style)\n\t\tcss += \"}\\n\";\n\t\tcss += \"\\n\";\n\n\n        for (var i = 0; i < spanLength; i++) \n        {\n\t\t\tvar spanCss = \"\"\n\t\t\tspanCss += \".sk-asset.sk-\" + layer.layerName + \" .span\" + (i + 1) + \" {\\n\";\n\n\t\t\tvar spanElement = spanArray[i];\n            if (!(spanElement.fontFamilyName === undefined)) \n            {\n\t\t\t\tspanCss += \"\\tfont-family: \\\"\" + spanElement.fontFamilyName + \"\\\" ;\\n\";\n\t\t\t}\n\n            if (!(spanElement.weight === undefined)) \n            {\n\t\t\t\tspanCss += \"\\tfont-weight: \" + spanElement.weight + \" ;\\n\";\n            }\n\n            if ((layer.style.verticalAlignment != undefined) && (spanLength == 1))\n            {\n                spanCss += \"\\tdisplay: table-cell;\\n\"\n                if (layer.style.verticalAlignment == \"top\")\n                    spanCss += \"\\tvertical-align: top;\\n\"\n                else if (layer.style.verticalAlignment == \"center\")\n                    spanCss += \"\\tvertical-align: middle;\\n\"\n                else if (layer.style.verticalAlignment == \"bottom\")\n                    spanCss += \"\\tvertical-align: bottom;\\n\"\n            }\n\n            if (!(spanElement.font_color === undefined)) \n            {\n                if (layer.style.fills.length > 0) \n                {\n\t\t\t\t\tspanCss += \"\\tcolor: \" + layer.style.fills[0].color + \" ;\\n\";\n                } \n                else \n                {\n\t\t\t\t\tspanCss += \"\\tcolor: #\" + spanElement.font_color + \" ;\\n\";\n\t\t\t\t}\n\t\t\t}\n\n            if (!(spanElement.fontSize === undefined)) \n            {\n\t\t\t\tspanCss += \"\\tfont-size: \" + spanElement.fontSize + \".0px ;\\n\";\n\t\t\t}\n\n\t\t\tspanCss += \"}\\n\";\n\t\t\tspanCss += \"\\n\";\n\t\t\tcss += spanCss;\n\n\t\t}\n        return css ;\n        \n    }\n    \n    /**\n     * Generates page level css\n     *\n     * @returns {String} global css for the page\n     */\n    function generateBoilerPlateCSS() \n    {\n        \n        var css = \".sk-ab {\\n\" +\n            \"\\tposition: relative;\\n\" +\n            \"\\toverflow: hidden;\\n\" +\n            \"}\\n\";\n\n        css += \"\\n\";\n\n        css += \".sk-asset {\\n\" +\n            \"\\tposition: absolute;\\n\" +\n            \"\\tbackground-repeat: no-repeat;\\n\" +\n            \"}\\n\";\n\n        return css;\n    }\n\n\n    /**\n     * Generates CSS for the artboard div\n     *\n     * @param {*} artboard\n     * @returns {String} css for artboard div\n     */\n    function generateCSSForArtboard(artboard) \n    {\n\n        var css = \".sk-ab.sk-\" + utils_obj.cleanString(artboard.name) + \" {\\n\";\n\n        if (artboard.sketchObject.hasBackgroundColor) \n        {\n            css += \"\\tbackground-color: \" + artboard.background.color + \";\\n\";\n        }\n\n        css += \"\\twidth: \" + Math.round(artboard.frame.width) + \"px;\\n\";\n        css += \"\\theight: \" + Math.round(artboard.frame.height) + \"px;\\n\";\n\n        css += \"}\\n\";\n\n        return css;\n    }\n\n    /**\n     * Run sequence of steps\n     *  1. creates folder for exporting\n     *  2. generates html and css\n     *  3. save text to apt files\n     *  4. export images for layers\n     *\n     * @param {*} folder where the results need to be exported\n     */\n    this.run = function(folder) \n    {\n        exportFolder = folder;\n\n        var _that = this;\n        selectedArtboards.forEach(function(artboard) \n        {\n\n            var exportPath = exportFolder + utils_obj.cleanString(artboard.name) + \"/\";\n\n            // Delete any previously generated folders\n            _that.file_obj.deleteFile(exportPath);\n            _that.file_obj.createFolder(exportPath);\n\n            var htmlPath = exportPath + \"index.html\";\n\n            _that.file_obj.saveTextToFile(htmlPath, generateHTML(artboard));\n\n            var cssPath = exportPath + \"styles.css\";\n            _that.file_obj.saveTextToFile(cssPath, generateCSS(artboard));\n\n            if (!embedSvg) \n            {\n                _that.file_obj.createFolder(exportPath + \"images/\");\n                exportImages(_that, exportedLayers[artboard], exportPath);\n            }\n        });\n    }\n}\n\n/**\n * Gets the default options for the exported\n *\n * @param {*} exporter\n * @returns {Object} options for genus exporter\n */\nfunction getOptions(exporter) \n{\n\n    // Return options\n    var options = {};\n    options.imageFormat = default_asset_export_format;\n    options.embedSvg = embedSvgConf;\n    options.imageScales = [];\n    options.imageScales.push(1)\n    options.imageScales.push(2)\n    options.imageScales.push(3)\n\n    return options;\n}\n\n/**\n * This method uses exported function to perform sketch 2 html export, and is also exposed to other modules for use.\n *\n * @param {*} context sketch context\n * @returns\n */\nfunction exportFullHTML(context) \n{\n\n    sketch.UI.message(\"Genus Plugin processing your artboard 🙌\");\n\n    try \n    {\n        var exporter = new Exporter(context);\n        var selectedArtboards = exporter.getSelectedArtboards();\n        if (selectedArtboards == undefined || selectedArtboards.length < 1) \n        {\n            var errorMsg = \"Please select the artboards you want to export to HTML.\" \n            var errorMsgTitle = \"Genus Plugin Error: No Artboard Selected\" \n            utils_obj.alertError(errorMsg, errorMsgTitle);\n            return;\n        }\n\n        var options = getOptions();\n        exporter.setOptions(options);\n\n        // Use the filesystem class to generate directory path\n        var currentDirectoryPath = exporter.file_obj.getCurrentFilePath();\n        var exportPath = currentDirectoryPath + \"/\";\n\n        exporter.run(exportPath);\n        var alertMessage = \"Export finished ☺️, Export location: \" + currentDirectoryPath;\n        sketch.UI.message(alertMessage);\n        utils_obj.alert(alertMessage, \"genus\");\n\n    } \n    catch (e) \n    {\n        if (e != nil) \n        { // Nil error means plugin was exited\n            log(e);\n            var msg = \"Oops Something went wrong: You may want to an raise issue on github, Copy paste following message:\\n \"\n            utils_obj.alertError( msg + e );\n        }\n    }\n}\n\n\nexport default exportFullHTML;","import exportFullHTML from './htmlCSSGenerator';\n\nexport default function() \n{\n    exportFullHTML(context);\n}","import sketch from \"sketch\";\n/**\n *Various common utility functions are implemented here\n *\n * @class utils\n */\n\nclass utils \n{\n    constructor(context) \n    {\n        this.context = context;\n    }\n\n    /**\n     * Method to return css weight given numerical weight number returned by sketch api\n     * Refer to this link https://sketchplugins.com/d/193-how-to-get-font-weight/3 \n     * @param {*} weight returned by sketch api\n     * @returns weight in integer\n     */\n    appKitWeightToCSSWeight(weight) \n    {\n        return [100, 100, 100, 200, 300, 400, 500, 500, 600, 700, 800, 900, 900, 900, 900, 900][weight]\n    }\n\n    /**\n     * Method to run arbitrary command line\n     *\n     * @param {*} cmd command that needs to be run \n     * @param {*} path for command \n     * @returns None\n     */\n    runCommand(cmd, path) \n    {\n        var task = NSTask.alloc().init()\n        task.setLaunchPath(\"/bin/bash\");\n        task.setArguments(cmd);\n        task.launch();\n    }\n\n    /**\n     * Method to display alert error with sound \n     *\n     * @param {*} msg for error\n     * @param {*} title for error message\n     * @returns None\n     */\n    alertError(msg, title) \n    {\n        title = title || \"Genus Plugin Error:\";\n        this.alert(msg, title);\n        this.runCommand(['-c', 'afplay /System/Library/Sounds/Basso.aiff']);\n    }\n\n    /**\n     * Method to display alert \n     *\n     * @param {*} msg for error\n     * @param {*} title for error message\n     * @returns None\n     */\n    alert(msg, title) \n    {\n        title = title || \"Genus\";\n        var app = NSApplication.sharedApplication()\n        app.displayDialog_withTitle(msg, title);\n    }\n\n    /**\n     * Convert color to hex string representation of color \n     *\n     * @param {*} color value\n     * @returns string hex value of color \n     */\n    hexColor(color) \n    {\n        console.log(\"color\",color)\n        var r = color.red() * 255;\n        var g = color.green() * 255;\n        var b = color.blue() * 255;\n        return (\"#\" + r.toString(16) + g.toString(16) + b.toString(16)).toUpperCase();\n    }\n\n    /**\n     * Utility function for generating append string for scaled images\n     *\n     * @param {*} scale value\n     * @returns string \n     */\n    nameForScale(scale) \n    {\n        return (scale > 1) ? \"@\" + scale + \"x\" : \"\";\n    }\n\n    /**\n     * Generate string name for layer name with layer name and id so that name \n     * is unique \n     *\n     * @param {*} sketch layer\n     * @returns string \n     */\n    generateLayerName(layer) \n    {\n        const layerExportName = this.cleanString(layer.name) + \"-\" + layer.id\n        return layerExportName;\n    }\n\n    /**\n     * Utility function for removing/replace unwanted chars from string\n     *\n     * @param {*} input string\n     * @returns output cleaned string \n     */\n    cleanString(str) \n    {\n        str = str.replace(/\\//g, \"-\");\n        str = str.replace(/[^\\w\\s]/gi, '');\n        return str.replace(/\\W+/g, \"-\");\n    }\n\n    /**\n     * Checks if there is mask layer in the group\n     *\n     * @param {*} group sketch group\n     * @returns {Boolean} true if mask present and false otherwise\n     */\n    isMaskLayerInGroup(group) \n    {\n        var maskPresent = false;\n        var layers = group.layers;\n        var maskLayers = [];\n        for (var i = 0; i < layers.length; i++) {\n            var layer = layers[i];\n            if (layer.sketchObject.isMasked())\n                maskPresent = true\n\n        }\n        return maskPresent;\n    }\n\n}\n\nexport default utils;","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}